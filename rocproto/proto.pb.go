// Code generated by protoc-gen-go.
// source: proto.proto
// DO NOT EDIT!

package rocproto

import "github.com/golang/protobuf/proto"
import "fmt"
import "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Packet_Magic int32

const (
	Packet_Nil          Packet_Magic = 0
	Packet_MAGIC_Number Packet_Magic = 175
)

var Packet_Magic_name = map[int32]string{
	0:   "Nil",
	175: "MAGIC_Number",
}
var Packet_Magic_value = map[string]int32{
	"Nil":          0,
	"MAGIC_Number": 175,
}

func (x Packet_Magic) String() string {
	return proto.EnumName(Packet_Magic_name, int32(x))
}
func (Packet_Magic) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0}
}

type Packet_Type int32

const (
	Packet_UNKOWN    Packet_Type = 0
	Packet_COMMAND   Packet_Type = 1
	Packet_DATA      Packet_Type = 2
	Packet_ERROR     Packet_Type = 3
	Packet_MASK_TYPE Packet_Type = 3
	Packet_SHIFT     Packet_Type = 6
)

var Packet_Type_name = map[int32]string{
	0: "UNKOWN",
	1: "COMMAND",
	2: "DATA",
	3: "ERROR",
	// Duplicate value: 3: "MASK_TYPE",
	6: "SHIFT",
}
var Packet_Type_value = map[string]int32{
	"UNKOWN":    0,
	"COMMAND":   1,
	"DATA":      2,
	"ERROR":     3,
	"MASK_TYPE": 3,
	"SHIFT":     6,
}

func (x Packet_Type) String() string {
	return proto.EnumName(Packet_Type_name, int32(x))
}
func (Packet_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 1}
}

type Packet_Section int32

const (
	Packet_UNKNOWN        Packet_Section = 0
	Packet_VIDEO_CLIENT   Packet_Section = 1
	Packet_VIDEO_SERVER   Packet_Section = 2
	Packet_CONTROL_SERVER Packet_Section = 4
	Packet_MASK_DEST      Packet_Section = 7
	Packet_SHIFT_SEND     Packet_Section = 3
	Packet_MASK_SEND      Packet_Section = 56
)

var Packet_Section_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "VIDEO_CLIENT",
	2:  "VIDEO_SERVER",
	4:  "CONTROL_SERVER",
	7:  "MASK_DEST",
	3:  "SHIFT_SEND",
	56: "MASK_SEND",
}
var Packet_Section_value = map[string]int32{
	"UNKNOWN":        0,
	"VIDEO_CLIENT":   1,
	"VIDEO_SERVER":   2,
	"CONTROL_SERVER": 4,
	"MASK_DEST":      7,
	"SHIFT_SEND":     3,
	"MASK_SEND":      56,
}

func (x Packet_Section) String() string {
	return proto.EnumName(Packet_Section_name, int32(x))
}
func (Packet_Section) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 2}
}

type Packet struct {
	Magic   uint32               `protobuf:"varint,1,opt,name=magic" json:"magic,omitempty"`
	Header  uint32               `protobuf:"varint,2,opt,name=header" json:"header,omitempty"`
	ID      uint32               `protobuf:"varint,3,opt,name=ID,json=iD" json:"ID,omitempty"`
	Payload *google_protobuf.Any `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
}

func (m *Packet) Reset() {
	*m = Packet{}
}
func (m *Packet) String() string {
	return proto.CompactTextString(m)
}
func (*Packet) ProtoMessage() {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0}
}

func (m *Packet) GetPayload() *google_protobuf.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Packet)(nil), "rocproto.Packet")
	proto.RegisterEnum("rocproto.Packet_Magic", Packet_Magic_name, Packet_Magic_value)
	proto.RegisterEnum("rocproto.Packet_Type", Packet_Type_name, Packet_Type_value)
	proto.RegisterEnum("rocproto.Packet_Section", Packet_Section_name, Packet_Section_value)
}

func init() {
	proto.RegisterFile("proto.proto", fileDescriptor3)
}

var fileDescriptor3 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x90, 0xcd, 0x4e, 0xc2, 0x40,
	0x14, 0x85, 0x6d, 0x29, 0x2d, 0x5c, 0x7e, 0x32, 0x4e, 0x88, 0xa9, 0xac, 0x4c, 0xdd, 0xb8, 0x2a,
	0x89, 0x6e, 0xdc, 0x36, 0x6d, 0xd5, 0x06, 0x3a, 0x25, 0xd3, 0x11, 0xe3, 0x8a, 0x94, 0x32, 0x62,
	0x23, 0x30, 0xa4, 0x81, 0x45, 0x13, 0xdf, 0xc9, 0x27, 0xf3, 0x1d, 0x1c, 0xa7, 0x82, 0x9b, 0xc9,
	0x9c, 0x73, 0x4f, 0xce, 0x77, 0x73, 0xa1, 0xb3, 0x2b, 0xc5, 0x5e, 0xb8, 0xea, 0xc5, 0xad, 0x52,
	0xe4, 0xea, 0x37, 0xbc, 0x5c, 0x09, 0xb1, 0x5a, 0xf3, 0x91, 0x52, 0x8b, 0xc3, 0xdb, 0x28, 0xdb,
	0x56, 0x75, 0xc8, 0xf9, 0xd6, 0xc1, 0x9c, 0x66, 0xf9, 0x07, 0xdf, 0xe3, 0x01, 0x34, 0x37, 0xd9,
	0xaa, 0xc8, 0x6d, 0xed, 0x4a, 0xbb, 0xe9, 0xd1, 0x5a, 0xe0, 0x0b, 0x30, 0xdf, 0x79, 0xb6, 0xe4,
	0xa5, 0xad, 0x2b, 0xfb, 0x4f, 0xe1, 0x3e, 0xe8, 0x51, 0x60, 0x37, 0x94, 0xa7, 0x17, 0x01, 0x76,
	0xc1, 0xda, 0x65, 0xd5, 0x5a, 0x64, 0x4b, 0xdb, 0x90, 0x66, 0xe7, 0x76, 0xe0, 0xd6, 0x54, 0xf7,
	0x48, 0x75, 0xbd, 0x6d, 0x45, 0x8f, 0x21, 0xe7, 0x1a, 0x9a, 0xb1, 0x02, 0x58, 0xd0, 0x20, 0xc5,
	0x1a, 0x9d, 0xe1, 0x73, 0xe8, 0xc6, 0xde, 0x63, 0xe4, 0xcf, 0xc9, 0x61, 0xb3, 0xe0, 0x25, 0xfa,
	0xd2, 0x1c, 0x0a, 0x06, 0xab, 0x76, 0x1c, 0x03, 0x98, 0xcf, 0x64, 0x9c, 0xbc, 0x10, 0x19, 0xeb,
	0x80, 0xe5, 0x27, 0x71, 0xec, 0x91, 0x00, 0x69, 0xb8, 0x05, 0x46, 0xe0, 0x31, 0x0f, 0xe9, 0xb8,
	0x0d, 0xcd, 0x90, 0xd2, 0x84, 0xa2, 0x06, 0xee, 0x41, 0x3b, 0xf6, 0xd2, 0xf1, 0x9c, 0xbd, 0x4e,
	0x43, 0x29, 0xe5, 0x24, 0x7d, 0x8a, 0x1e, 0x18, 0x32, 0x87, 0x3a, 0xd2, 0x9c, 0x4f, 0xb0, 0x52,
	0x9e, 0xef, 0x0b, 0xb1, 0xfd, 0xad, 0x92, 0xb5, 0xa4, 0xee, 0x45, 0xd0, 0x9d, 0x45, 0x41, 0x98,
	0xcc, 0xfd, 0x49, 0x14, 0x12, 0x26, 0xcb, 0x4f, 0x4e, 0x1a, 0xd2, 0x59, 0x48, 0x25, 0x04, 0x43,
	0xdf, 0x4f, 0x08, 0xa3, 0xc9, 0xe4, 0xe8, 0x19, 0x27, 0x5a, 0x10, 0xa6, 0x0c, 0x59, 0xf2, 0x2e,
	0xa0, 0x68, 0x32, 0x20, 0x37, 0xfc, 0x5f, 0x46, 0xc9, 0xfb, 0x85, 0xa9, 0xae, 0x71, 0xf7, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x35, 0xbb, 0x70, 0xb0, 0xaa, 0x01, 0x00, 0x00,
}
